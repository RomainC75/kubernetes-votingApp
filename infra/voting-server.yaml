apiVersion: apps/v1
kind: Deployment
metadata:
  name: voting-server
spec:
  replicas: 1
  selector:
    matchLabels:
      name: voting-server
  template:
    metadata:
      labels:
        name: voting-server
    spec:
      containers:
      - name: voting-server
        image: voting-server
        imagePullPolicy: Never
        # command: ["go"]
        # args: ["run", "cmd/migrate/main.go"]
        resources:
          limits:
            memory: 600Mi
            cpu: 1
          requests:
            memory: 300Mi
            cpu: 500m
        volumeMounts:
        - mountPath: /go/src/server
          name: source-code
        env:
        # secret
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dev-secret
              key: DB_PASSWORD
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: dev-secret
              key: DB_USERNAME
        - name: DATABASE_URL
          value: postgresql://$(DB_USERNAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
        # every variable at the same time ? 
        envFrom:
          - configMapRef:
              name: dev-env

      volumes:
      - name: source-code
        hostPath:
          path: /Users/rom/Work/perso/kubernetes/voting-app/voting-server
          type: Directory
      - name: config
        configMap:
          # Provide the name of the ConfigMap you want to mount.
          name: dev-env
          # An array of keys from the ConfigMap to create as files
          items:
          - key: "voting-app-node-external-port"
            path: "voting-app-node-external-port"
