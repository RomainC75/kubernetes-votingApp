apiVersion: apps/v1
kind: Deployment
metadata:
  name: voting-server
spec:
  replicas: 1
  selector:
    matchLabels:
      name: voting-server
  template:
    metadata:
      labels:
        name: voting-server
    spec:
      containers:
      - name: voting-server
        image: voting-server
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "=======STARTUP=======" && 
            migrate --path ../shared/postgres/migration --database "postgresql://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable" --verbose up &&
            air
        resources:
          limits:
            memory: 600Mi
            cpu: 1
          requests:
            memory: 300Mi
            cpu: 500m
        volumeMounts:
        - mountPath: /go/src/voting-server
          name: source-code
        - mountPath: /go/src/shared
          name: shared-code
        env:
        # secret
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: DB_PASSWORD
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: DB_USERNAME
        - name: DATABASE_URL
          value: postgresql://$(DB_USERNAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
        # every variable at the same time ? 
        envFrom:
          - configMapRef:
              name: dev-env

      volumes:
      - name: source-code
        hostPath:
          path: /Users/rom/Work/perso/kubernetes/voting-app/voting-server
          type: Directory
      - name: shared-code
        hostPath:
          path: /Users/rom/Work/perso/kubernetes/voting-app/shared
          type: Directory
      - name: config
        configMap:
          name: dev-env
          items:
          - key: "voting-app-node-external-port"
            path: "voting-app-node-external-port"

---

apiVersion: v1
kind: Service
metadata:
  name: voting-server-node-srv
  labels:
    app: voting-server-srv
spec:
  type: NodePort
  ports:
  - targetPort: 80
    port: 80
    nodePort: 30001
    protocol: TCP
  selector:
    name: voting-server
status:
  loadBalancer: {}